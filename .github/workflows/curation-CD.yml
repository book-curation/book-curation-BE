name: Book Curation Service CD

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: book-curation-rg
  CONTAINER_GROUP: book-curation-aci
  IMAGE_NAME: curation
  ACR_NAME: crcuration
  ACR_URL: 'crcuration.azurecr.io'
  
jobs:
  docker-image-build-and-push:
    name: Docker image build and push to Azure Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.ACR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker push ${{ env.ACR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-to-Azure-Container-Instances:
    needs: docker-image-build-and-push
    name: Deploy to Azure Container Instances
    runs-on: ubuntu-latest
    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instances
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          dns-name-label: ${{ env.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ env.ACR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          registry-login-server: ${{ env.ACR_URL }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: ${{ env.CONTAINER_GROUP }}
          location: 'koreacentral'
          cpu: 1
          memory: 1
          ports: 3000


